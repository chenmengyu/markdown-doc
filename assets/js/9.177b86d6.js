(window.webpackJsonp=window.webpackJsonp||[]).push([[9],{207:function(e,i,t){"use strict";t.r(i);var s=t(0),n=Object(s.a)({},(function(){var e=this,i=e.$createElement,t=e._self._c||i;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("h1",{attrs:{id:"区块元素"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#区块元素"}},[e._v("#")]),e._v(" 区块元素")]),e._v(" "),t("h2",{attrs:{id:"段落和换行"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#段落和换行"}},[e._v("#")]),e._v(" 段落和换行")]),e._v(" "),t("p",[e._v("一个 Markdown 段落是由一个或多个连续的文本行组成，它的前后要有一个以上的空行（空行的定义是显示上看起来像是空的，便会被视为空行。比方说，若某一行只包含空格和制表符，则该行也会被视为空行）。普通段落不该用空格或制表符来缩进。")]),e._v(" "),t("p",[e._v("「由一个或多个连续的文本行组成」这句话其实暗示了 Markdown 允许段落内的强迫换行（插入换行符），这个特性和其他大部分的 text-to-HTML 格式不一样（包括 Movable Type 的「Convert Line Breaks」选项），其它的格式会把每个换行符都转成<br />标签。")]),e._v(" "),t("p",[e._v("如果你确实想要依赖 Markdown 来插入<br />标签的话，在插入处先按入两个以上的空格然后回车。")]),e._v(" "),t("p",[e._v("的确，需要多费点事（多加空格）来产生<br />，但是简单地「每个换行都转换为<br />」的方法在 Markdown 中并不适合， Markdown 中 email 式的 区块引用 和多段落的 列表 在使用换行来排版的时候，不但更好用，还更方便阅读。")]),e._v(" "),t("ul",[t("li",[e._v("特殊字符")])]),e._v(" "),t("table",[t("thead",[t("tr",[t("th",[e._v("字符")]),e._v(" "),t("th",[e._v("十进制")]),e._v(" "),t("th",[e._v("转移字符")])])]),e._v(" "),t("tbody",[t("tr",[t("td",[e._v('"')]),e._v(" "),t("td",[e._v("&#34;")]),e._v(" "),t("td",[e._v("&quot;")])]),e._v(" "),t("tr",[t("td",[e._v("&")]),e._v(" "),t("td",[e._v("&#38;")]),e._v(" "),t("td",[e._v("&amp;")])]),e._v(" "),t("tr",[t("td",[e._v("<")]),e._v(" "),t("td",[e._v("&#60;")]),e._v(" "),t("td",[e._v("&lt;")])]),e._v(" "),t("tr",[t("td",[e._v(">")]),e._v(" "),t("td",[e._v("&#62;")]),e._v(" "),t("td",[e._v("&gt;")])]),e._v(" "),t("tr",[t("td",[e._v("不断开空格(non-breaking space)")]),e._v(" "),t("td",[e._v("&#160;")]),e._v(" "),t("td",[e._v("&nbsp;")])])])]),e._v(" "),t("h2",{attrs:{id:"标题"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#标题"}},[e._v("#")]),e._v(" 标题")]),e._v(" "),t("p",[e._v("Markdown 支持两种标题的语法，类 Setext 和类 atx 形式。")]),e._v(" "),t("p",[e._v("类 Setext 形式是用底线的形式，利用 = （最高阶标题）和 - （第二阶标题），例如：")]),e._v(" "),t("pre",[t("code",[e._v("This is an H1\n=============\n\nThis is an H2\n-------------\n")])]),e._v(" "),t("p",[e._v("结果如下：")]),e._v(" "),t("h1",{attrs:{id:"this-is-an-h1"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#this-is-an-h1"}},[e._v("#")]),e._v(" This is an H1")]),e._v(" "),t("h2",{attrs:{id:"this-is-an-h2"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#this-is-an-h2"}},[e._v("#")]),e._v(" This is an H2")]),e._v(" "),t("h2",{attrs:{id:"区块引用"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#区块引用"}},[e._v("#")]),e._v(" 区块引用")]),e._v(" "),t("p",[e._v("Markdown 标记区块引用是使用类似 email 中用 > 的引用方式。如果你还熟悉在 email 信件中的引言部分，你就知道怎么在 Markdown 文件中建立一个区块引用，那会看起来像是你自己先断好行，然后在每行的最前面加上 > ：")]),e._v(" "),t("pre",[t("code",[e._v("> This is a blockquote with two paragraphs. Lorem ipsum dolor sit amet,\n> consectetuer adipiscing elit. Aliquam hendrerit mi posuere lectus.\n> Vestibulum enim wisi, viverra nec, fringilla in, laoreet vitae, risus.\n> \n> Donec sit amet nisl. Aliquam semper ipsum sit amet velit. Suspendisse\n> id sem consectetuer libero luctus adipiscing.\n")])]),e._v(" "),t("p",[e._v("结果如下：")]),e._v(" "),t("blockquote",[t("p",[e._v("This is a blockquote with two paragraphs. Lorem ipsum dolor sit amet,\nconsectetuer adipiscing elit. Aliquam hendrerit mi posuere lectus.\nVestibulum enim wisi, viverra nec, fringilla in, laoreet vitae, risus.")]),e._v(" "),t("p",[e._v("Donec sit amet nisl. Aliquam semper ipsum sit amet velit. Suspendisse\nid sem consectetuer libero luctus adipiscing.")])]),e._v(" "),t("p",[e._v("Markdown 也允许你偷懒只在整个段落的第一行最前面加上 > ：")]),e._v(" "),t("pre",[t("code",[e._v("> This is a blockquote with two paragraphs. Lorem ipsum dolor sit amet,\nconsectetuer adipiscing elit. Aliquam hendrerit mi posuere lectus.\nVestibulum enim wisi, viverra nec, fringilla in, laoreet vitae, risus.\n\n> Donec sit amet nisl. Aliquam semper ipsum sit amet velit. Suspendisse\nid sem consectetuer libero luctus adipiscing.\n")])]),e._v(" "),t("p",[e._v("结果如下：")]),e._v(" "),t("blockquote",[t("p",[e._v("This is a blockquote with two paragraphs. Lorem ipsum dolor sit amet,\nconsectetuer adipiscing elit. Aliquam hendrerit mi posuere lectus.\nVestibulum enim wisi, viverra nec, fringilla in, laoreet vitae, risus.")])]),e._v(" "),t("blockquote",[t("p",[e._v("Donec sit amet nisl. Aliquam semper ipsum sit amet velit. Suspendisse\nid sem consectetuer libero luctus adipiscing.")])]),e._v(" "),t("p",[e._v("区块引用可以嵌套（例如：引用内的引用），只要根据层次加上不同数量的 > ：")]),e._v(" "),t("pre",[t("code",[e._v("This is the first level of quoting.\n>\n> > This is nested blockquote.\n>\n> Back to the first level.\n")])]),e._v(" "),t("p",[e._v("结果如下：")]),e._v(" "),t("p",[e._v("This is the first level of quoting.")]),e._v(" "),t("blockquote",[t("blockquote",[t("p",[e._v("This is nested blockquote.")])]),e._v(" "),t("p",[e._v("Back to the first level.")])]),e._v(" "),t("p",[e._v("引用的区块内也可以使用其他的 Markdown 语法，包括标题、列表、代码区块等：")]),e._v(" "),t("pre",[t("code",[e._v('> ## 这是一个标题。\n> \n> 1.   这是第一行列表项。\n> 2.   这是第二行列表项。\n> \n> 给出一些例子代码：\n> \n>     return shell_exec("echo $input | $markdown_script");\n')])]),e._v(" "),t("p",[e._v("结果如下：")]),e._v(" "),t("blockquote",[t("h2",{attrs:{id:"这是一个标题。"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#这是一个标题。"}},[e._v("#")]),e._v(" 这是一个标题。")]),e._v(" "),t("ol",[t("li",[e._v("这是第一行列表项。")]),e._v(" "),t("li",[e._v("这是第二行列表项。")])]),e._v(" "),t("p",[e._v("给出一些例子代码：")]),e._v(" "),t("pre",[t("code",[e._v('return shell_exec("echo $input | $markdown_script");\n')])])]),e._v(" "),t("p",[e._v("任何像样的文本编辑器都能轻松地建立 email 型的引用。例如在 BBEdit 中，你可以选取文字后然后从选单中选择增加引用阶层。")]),e._v(" "),t("h2",{attrs:{id:"列表"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#列表"}},[e._v("#")]),e._v(" 列表")]),e._v(" "),t("p",[e._v("Markdown 支持有序列表和无序列表。")]),e._v(" "),t("p",[e._v("无序列表使用星号、加号或是减号作为列表标记：")]),e._v(" "),t("pre",[t("code",[e._v("* Red\n* Green\n* Blue\n等同于：\n+ Red\n+ Green\n+ Blue\n或：\n- Red\n- Green\n- Blue\n")])]),e._v(" "),t("p",[e._v("结果：")]),e._v(" "),t("ul",[t("li",[e._v("Red")]),e._v(" "),t("li",[e._v("Green")]),e._v(" "),t("li",[e._v("Blue")])]),e._v(" "),t("p",[e._v("有序列表则使用数字接着一个英文句点：")]),e._v(" "),t("pre",[t("code",[e._v("1. Bird\n2. McHale\n3. Parish\n")])]),e._v(" "),t("p",[e._v("结果：")]),e._v(" "),t("ol",[t("li",[e._v("Bird")]),e._v(" "),t("li",[e._v("McHale")]),e._v(" "),t("li",[e._v("Parish")])]),e._v(" "),t("p",[e._v("很重要的一点是，你在列表标记上使用的数字并不会影响输出的 HTML 结果，上面的列表所产生的 HTML 标记为：")]),e._v(" "),t("pre",[t("code",[e._v("<ol>\n<li>Bird</li>\n<li>McHale</li>\n<li>Parish</li>\n</ol>\n")])]),e._v(" "),t("p",[e._v("如果你的列表标记写成：")]),e._v(" "),t("pre",[t("code",[e._v("1.  Bird\n1.  McHale\n1.  Parish\n")])]),e._v(" "),t("p",[e._v("或甚至是：")]),e._v(" "),t("pre",[t("code",[e._v("3. Bird\n1. McHale\n8. Parish\n")])]),e._v(" "),t("p",[e._v("你都会得到完全相同的 HTML 输出。重点在于，你可以让 Markdown 文件的列表数字和输出的结果相同，或是你懒一点，你可以完全不用在意数字的正确性。")]),e._v(" "),t("p",[e._v("如果你使用懒惰的写法，建议第一个项目最好还是从 1. 开始，因为 Markdown 未来可能会支持有序列表的 start 属性。")]),e._v(" "),t("p",[e._v("列表项目标记通常是放在最左边，但是其实也可以缩进，最多 3 个空格，项目标记后面则一定要接着至少一个空格或制表符。")]),e._v(" "),t("p",[e._v("要让列表看起来更漂亮，你可以把内容用固定的缩进整理好：")]),e._v(" "),t("pre",[t("code",[e._v("*   Lorem ipsum dolor sit amet, consectetuer adipiscing elit.\n    Aliquam hendrerit mi posuere lectus. Vestibulum enim wisi,\n    viverra nec, fringilla in, laoreet vitae, risus.\n*   Donec sit amet nisl. Aliquam semper ipsum sit amet velit.\n    Suspendisse id sem consectetuer libero luctus adipiscing.\n")])]),e._v(" "),t("p",[e._v("结果：")]),e._v(" "),t("ul",[t("li",[e._v("Lorem ipsum dolor sit amet, consectetuer adipiscing elit.\nAliquam hendrerit mi posuere lectus. Vestibulum enim wisi,\nviverra nec, fringilla in, laoreet vitae, risus.")]),e._v(" "),t("li",[e._v("Donec sit amet nisl. Aliquam semper ipsum sit amet velit.\nSuspendisse id sem consectetuer libero luctus adipiscing.")])]),e._v(" "),t("p",[e._v("但是如果你懒，那也行：")]),e._v(" "),t("pre",[t("code",[e._v("*   Lorem ipsum dolor sit amet, consectetuer adipiscing elit.\nAliquam hendrerit mi posuere lectus. Vestibulum enim wisi,\nviverra nec, fringilla in, laoreet vitae, risus.\n*   Donec sit amet nisl. Aliquam semper ipsum sit amet velit.\nSuspendisse id sem consectetuer libero luctus adipiscing.\n")])]),e._v(" "),t("p",[e._v("结果：")]),e._v(" "),t("ul",[t("li",[e._v("Lorem ipsum dolor sit amet, consectetuer adipiscing elit.\nAliquam hendrerit mi posuere lectus. Vestibulum enim wisi,\nviverra nec, fringilla in, laoreet vitae, risus.")]),e._v(" "),t("li",[e._v("Donec sit amet nisl. Aliquam semper ipsum sit amet velit.\nSuspendisse id sem consectetuer libero luctus adipiscing.")])])])}),[],!1,null,null,null);i.default=n.exports}}]);